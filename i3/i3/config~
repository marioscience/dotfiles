# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

## Variables
## Eventually move to X resources database (just google it after learning to 
## use this file well)
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
#font pango: DejaVu Sans Mono, Terminus Bold Semi-Condensed 9
#font pango: Terminus, DejaVu Sans Mono 9
#font pango: Monaco, DejaVu Sans Mono 9
font pango: Monaco, Roboto, DejaVu Sans Mono 11px

#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
#font pango:DejaVu Sans Mono 10px
#font pango:DejaVu Sans Mono, Terminus Bold Semi-Condensed 11
#font pango:Terminus 11px

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec x-terminal-emulator

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# vv good idea but it requires more work			
#bindsym $mod+Tab focus back_and_forth

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# start quick floating terminal
for_window [class="FXTerm"] floating enable
bindsym $mod+Shift+Return exec x-terminal-emulator -class FXTerm -geometry 100x40+655+300

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Good bye, you piece of shit!.' -b 'Wow, how rude!' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3status
#	position top
#	colors {
#	background #3e3e3e
#	}	
#}

# Polybar start
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Start a terminal right after start
# Proposed name PROductivity DASHboard - prodash
# Display message with greeting, todo short term, todo long term, announcements and important notes
# Create a dashboard when the first command line interface opens after starting the computer. 
# Dashboard has for the todo, whatever the user adds as 
# Create server that will save these setting and will present it as an API. With this API the dashboard can be displayed or modified from different places.
# For example, you can set a script at the start that will get the settings and data and display the dashboard with sections such as todo, reminders, todo-long-term
# ability to add different sections?
# full-featured todo app used in the dashboard?
# displaty almost overview in todo section?
# how to unify all clients. create a software development kit to quickly create and deploy if necessary clients or new servers where they are required. 
# create libraries to help with different common functionality to apps they might need. 

# [WORK on this as hobby project please]


#exec_always $HOME/.config/polybar/startup_prodash_client.py
exec_always "x-terminal-emulator && ranger"

# Ideas to implement: 
# Add Mod+tab shortcut that toggles back and forth with last window


#### Custom Configurations

# config for i3-gaps. disable title bars. more info in i3-gaps github readme
for_window [class="^.*"] border pixel 4
client.focused #bcbcbc #bcbcbc #bcbcbc #bcbcbc #bcbcbc

popup_during_fullscreen smart

#### i3-gaps configurations
gaps inner 2
gaps outer 1

#experimental: start bluetooth headphones
###exec /home/global_startup_scripts/connect_bluetooth_headphones.sh


#### Set fucking volume up or down

bindsym $mod+Control+Up exec "cd ~/.config/i3/ && ./pavuvolume.sh --up"
bindsym $mod+Control+Down exec "cd ~/.config/i3/ && ./pavuvolume.sh --down"
bindsym $mod+Control+s exec "cd ~/.config/i3/ && ./streaming.sh --start"
bindsym $mod+Control+d exec "cd ~/.config/i3/ && ./streaming.sh --stop"
bindsym $mod+c exec "cd ~/.config/i3/ && ./screenshot.sh --selectscreen"
bindsym $mod+Shift+v exec "cd ~/.config/i3/ && ./screenshot.sh --entirescreen"
# Multi-screen screenshots with scrot -- from the internet, not tested yet
#bindsym --release Print exec scrot 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # All screens
